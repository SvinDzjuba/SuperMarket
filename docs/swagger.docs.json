{
    "openapi": "3.0.3",
    "info": {
        "title": "SuperMarket API",
        "description": "A simple supermarket API project with Swagger Documentation",
        "version": "1.0.0",
        "contact": {
            "name": "Maksim Dzjubenko",
            "email": "maksondzjubenko@gmail.com",
            "url": "https://github.com/SvinDzjuba"
        }
    },
    "schemes": [
        "http"
    ],
    "host": "localhost:3000",
    "basePath": "/api-docs",
    "paths": {
        "/api/shops": {
            "get": {
                "tags": [
                    "Store Actions"
                ],
                "summary": "Get all the shops",
                "description": "Get all the shops",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shopsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Store Actions"
                ],
                "summary": "Create a new shop",
                "description": "Add a new shop",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Shop"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shop is already exists",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shopsResponse"
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shopsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/shops/{id}": {
            "put": {
                "tags": [
                    "Store Actions"
                ],
                "summary": "Update the shop",
                "description": "Update the shop",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shop id that needs to be updated",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Shop"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shopsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Store Actions"
                ],
                "summary": "Delete the shop",
                "description": "Delete the shop",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shop id that needs to be deleted",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shopsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/search/product/shops/{product}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all the shops that have a particular product",
                "description": "Get all the shops that have a particular product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product that has any shop",
                        "required": true,
                        "type": "string",
                        "example": "tomatoes"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "product": {
                                    "type": "string",
                                    "example": "tomatoes"
                                },
                                "shops": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Maxima XX"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "Puru tee 77"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You must provide a product",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/search/shop/{name}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get shops by name",
                "description": "Get shops by name",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Shop name that you want to search",
                        "required": true,
                        "type": "string",
                        "example": "Maxima XX"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Maxima XX"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Puru tee 77"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You must provide a shop name",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/search/shop/employees/{shop}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all shop employees",
                "description": "Get all shop employees",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "description": "Shop name that need for employees search",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Employees"
                        }
                    },
                    "404": {
                        "description": "You must provide a shop name",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/search/products/{type}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get products by type",
                "description": "Get products by type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type name by which you want to search products",
                        "required": true,
                        "type": "string",
                        "example": "Tomatoes"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Estonian tomatoes"
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 2.54
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Spanish tomatoes"
                                    },
                                    "classification": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Vegetables"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "Tomatoes"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You must provide a type name",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/search/employees/{position}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all employees by position",
                "description": "Get all employees by position",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "position",
                        "in": "path",
                        "description": "Position name by which you want to search employees",
                        "required": true,
                        "type": "string",
                        "example": "Director"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "position": {
                                        "type": "string",
                                        "example": "Director"
                                    },
                                    "employees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "fullName": {
                                                    "type": "string",
                                                    "example": "Elena Sabieva"
                                                },
                                                "birthDate": {
                                                    "type": "string",
                                                    "example": "2000-02-01"
                                                },
                                                "enteredDate": {
                                                    "type": "string",
                                                    "example": "2018-05-25"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You must provide a position name",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Sign in account",
                "description": "Sign in account",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Maxima XX"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Puru tee 77"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You must provide a shop name",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Create the account",
                "description": "Create the account",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "birthDate": {
                                        "type": "string",
                                        "example": "2004-01-24"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Maxima XX"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Puru tee 77"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You must provide a shop name",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/api/access": {
            "get": {
                "tags": [
                    "Actions with a token"
                ],
                "summary": "Get authorized user content access",
                "description": "Get authorized user content access",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": "string",
                                "name": "message",
                                "example": "[ USER ] Content!"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "404": {
                        "description": "No token provided!",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AccessToken": {
            "name": "x-access-token",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
                "type": "string"
            }
        },
        "shopsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Maxima XX"
                },
                "address": {
                    "type": "string",
                    "example": "Puru tee 77"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fullName": {
                                "type": "string",
                                "example": "Maksim Dzjubenko"
                            },
                            "position": {
                                "type": "string",
                                "example": "Director"
                            },
                            "birthDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2001-01-24"
                            },
                            "enteredDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2021-12-31"
                            }
                        }
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Estonian tomatoes"
                            },
                            "classification": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Vegetables"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Tomatoes"
                                    }
                                }
                            },
                            "price": {
                                "type": "number",
                                "example": 2.54
                            },
                            "description": {
                                "type": "string",
                                "example": "Red tomatoes"
                            }
                        }
                    }
                }
            }
        },
        "Shop": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Maxima XX"
                },
                "address": {
                    "type": "string",
                    "example": "Puru tee 77"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fullName": {
                                "type": "string",
                                "example": "Maksim Dzjubenko"
                            },
                            "position": {
                                "type": "string",
                                "example": "Director"
                            },
                            "birthDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2001-01-24"
                            },
                            "enteredDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2021-12-31"
                            }
                        }
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Estonian tomatoes"
                            },
                            "classification": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Vegetables"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Tomatoes"
                                    }
                                }
                            },
                            "price": {
                                "type": "number",
                                "example": 2.54
                            },
                            "description": {
                                "type": "string",
                                "example": "Red tomatoes"
                            }
                        }
                    }
                }
            }
        },
        "Employees": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "example": "Maksim Dzjubenko"
                    },
                    "position": {
                        "type": "string",
                        "example": "Director"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2001-01-24"
                    },
                    "enteredDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-12-31"
                    }
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}